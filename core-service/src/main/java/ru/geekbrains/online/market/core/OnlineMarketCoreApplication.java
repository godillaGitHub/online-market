package ru.geekbrains.online.market.core;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class OnlineMarketCoreApplication {
	// План действий:
	// - + Swagger
	// - + Добавить работу с множеством корзин в редисе
	// - + Замените цены продуктов/корзин с int на BigDecimal
	// - + Добавить страницу с заказами
	// - + Добавьте фильтрацию/пагинация товаров (по цене мин/макс, названию), поговорить про спецификации
	// - Добавить правила безопасности на гейтвей (12)
	// - + Поговорить про докер
	// - + Добавить платежную систему (12) / OAuth 2.0
	// - + Распилить фронт на страницы
	// - + Поговорить про работу над МСами
	// - + Wiremock (12)
	// - + Поговорить про профили
	// - - Иерархия товаров
	// - + Добавить пагинацию на фронт (кнопки < Пред стр, 1, 2, 3, 4, .., След стр >)
	// - + Структура проектов (апи)

	// Домашнее задание:
	// - Оптимизация добавления товараов в корзину: если добавляется товар, который уже есть в корзине, то
	// нужно просто увеличить счетчик соответствующей позиции и не ходить через слой интеграции в проуктовый сервис
	// - Добавьте проброс списка ролей в заголовках
	// - Юзер с ролью админ, может постучаться на ендпоинт /admin в кор-сервис и получить в ответ сообщение JSON { "value": "admin" }
	// Подумать что должно произойти, если роль не админ

	public static void main(String[] args) {
		SpringApplication.run(OnlineMarketCoreApplication.class, args);
	}
}
